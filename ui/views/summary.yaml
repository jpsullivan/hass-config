# Summary View

title: Summary
icon: "mdi:home-circle"
path: "summary"

# Most of the layouts are based on CSS Grids using layout-card.
# The cards are first set inside a layout card for margins
# and then inside another layout card for the columns for the top half,
# while the bottom half is a layout-card in masonry layout.

# Learn more about CSS Grids:
# https://css-tricks.com/snippets/css/complete-guide-grid/

type: "custom:grid-layout"
layout:
  grid-template-rows: auto 32px
  grid-template-columns: 8px 1fr 8px
  grid-template-areas: |
    ". cc ." ". . ."
  margin: 0
  card_margin: 0
  mediaquery:
    "(min-width: 1544px)":
      grid-template-columns: auto 1440px auto
      grid-template-areas: |
        ". cc ." ". . ."
    "(min-width: 1200px)":
      grid-template-columns: 0 auto 0
      grid-template-areas: |
        ". cc ."
      grid-column-gap: 32px

cards:
  - type: "custom:layout-card"
    layout_type: "custom:grid-layout"

    layout:
      grid-template-columns: >-
        calc( 25% - 24px ) calc( 25% - 24px ) calc( 25% - 24px ) calc(
        25% - 24px )
      grid-column-gap: 32px
      grid-template-areas: |
        "h h h h"
        "c1 fp fp c2"
      mediaquery:
        "(max-width: 512px)":
          grid-template-columns: 1fr
          grid-template-areas: |
            "h"
            "fp"
            "c1"
            "c2"
          margin: 0
        "(max-width: 800px)":
          grid-template-columns: 1fr 1fr
          grid-template-areas: |
            "h h"
            "fp fp"
            "c1 c2"
          margin: 0
        "(max-width: 1128px)":
          grid-template-columns: 1fr 1fr 1fr
          grid-template-areas: |
            "h h h"
            "c1 fp fp"
            "c2 none none"
          margin: 0
      margin: 0

    view_layout:
      grid-area: cc

    cards:
      # [Header] Greetings
      - type: custom:state-switch
        entity: user
        default: default
        view_layout:
          grid-area: h
        states:
          # Josh:
          #   type: "custom:layout-card"
          #   layout_type: "custom:grid-layout"
          #   layout:
          #     margin: -16px 0 0 0

          # Autum:
          #   type: "custom:layout-card"
          #   layout_type: "custom:grid-layout"
          #   layout:
          #     margin: -16px 0 0 0

          default:
            type: "custom:layout-card"
            layout_type: "custom:grid-layout"
            layout:
              grid-template-columns: auto min-content
              grid-template-rows: auto
              margin: -1px -1px -16px -1px
              padding: 0
            view_layout:
              grid-area: h
            cards:
              - type: markdown
                content: >
                  # {% if now() > today_at('18:00') %}Good evening{% elif
                  now() > today_at('12:00') %}Good afternoon{% elif now() >
                  today_at('5:00') %}Good morning{% else %}Good night{%
                  endif %}, {{ user }}.
                style:
                  .: |
                    ha-card {
                      background: none;
                      margin-bottom: -16px;
                    }
                  ha-markdown$: |
                    h1 {
                      font-size: var(--title-font-size, 3rem);
                      font-weight: 500;
                      line-height: 1;
                      margin-left: -2px;
                      margin-block-end: -8px;
                      margin-top: -12px !important;
                    }

              - type: "custom:layout-card"
                layout_type: "custom:horizontal-layout"
                cards:
                  - type: "custom:mushroom-person-card"
                    entity: person.josh
                    style: "ha-card {background: none;}"
                    use_entity_picture: true
                    view_layout: null
                layout:
                  width: 160
                  margin: -1
                view_layout:
                  place-self: center
                  show:
                    mediaquery: "(min-width: 800px)"

              - type: "custom:layout-card"
                layout_type: "custom:horizontal-layout"
                cards:
                  - type: "custom:mushroom-person-card"
                    entity: person.josh
                    use_entity_picture: true
                    hide_state: true
                    hide_name: true
                    style: |
                      ha-card {background: none;
                        margin-top: 16px;
                        transform: scale(1.5) translate(-8px);
                      }
                layout:
                  width: 72
                view_layout:
                  place-self: start
                  show:
                    mediaquery: "(max-width: 799.99px)"

              # - type: "custom:layout-card"
              #   layout_type: "custom:horizontal-layout"
              #   cards:
              #     - type: "custom:mushroom-person-card"
              #       entity: person.autum
              #       style: "ha-card {background: none;}"
              #       use_entity_picture: true
              #       view_layout: null
              #   layout:
              #     width: 160
              #     margin: -1
              #   view_layout:
              #     place-self: center
              #     show:
              #       mediaquery: "(min-width: 800px)"

              # - type: "custom:layout-card"
              #   layout_type: "custom:horizontal-layout"
              #   cards:
              #     - type: "custom:mushroom-person-card"
              #       entity: person.autum
              #       use_entity_picture: true
              #       hide_state: true
              #       hide_name: true
              #       style: |
              #         ha-card {background: none;
              #           margin-top: 16px;
              #           transform: scale(1.5) translate(-8px);
              #         }
              #   layout:
              #     width: 72
              #   view_layout:
              #     place-self: start
              #     show:
              #       mediaquery: "(max-width: 799.99px)"

      # [Floor Plan Diagram] USS Strawberry Fields
      - type: "custom:layout-card"
        layout_type: "custom:grid-layout"
        layout:
          margin: -1px
        view_layout:
          grid-area: fp
        cards:
          - type: "custom:button-card"
            template: header_card
            variables:
              name: SULLYHAUS CONTROL CENTER
              label: Areas
              link: /config/areas/dashboard

            # - type: "custom:floorplan-card"
            #   config:
            #     image:
            #       location: /local/uss-strawberry-fields.svg
            #       cache: false
            #     stylesheet: /local/ha-floorplan.css
            #     defaults:
            #       hover_action: hover-info
            #       tap_action: more-info
            #     rules:
            #       - entities:
            #           # - sensor.bathroom_env_sensor_temperature
            #           # - sensor.workspace_room_hue_sensor_temperature
            #           # - sensor.bedroom_hue_sensor_temperature
            #           - sensor.main_floor_temperature
            #         state_action:
            #           action: call-service
            #           service: floorplan.text_set
            #           service_data: '${entity.state + " Â°C"}'

            #       - entity: >-
            #           sensor.main_floor_temperature
            #         element: >-
            #           sensor.main_floor_temperature.bg
            #         state_action:
            #           action: call-service
            #           service: floorplan.class_set
            #           service_data:
            #             class: '${(entity.state > 27) || (entity.state < 20) ? "bg-on" : "bg-off"}'

            card_mod:
              style: |
                ha-card {background: none;}

      # [Column] Security

      - type: "custom:layout-card"
        layout_type: "custom:grid-layout"
        layout:
          grid-template-columns: >-
            repeat(auto-fill, [col-start] minmax(120px, 1fr)
            [col-end])
          margin: 0
          card_margin: 1px
        cards:
          - type: "custom:button-card"
            template: header_card
            variables:
              name: SECURITY
              label: More
              link: /ui-dashboard/security
            view_layout:
              grid-column: 1/-1

          # front door camera and presence
          - type: "custom:button-card"
            template:
              - live_tile_card
              - live_tile_with_long_state
              - live_tile_with_state_countdown
            entity: binary_sensor.doorbell_motion
            name: Front Door
            variables:
              aspect_ratio: "[[[ return Math.round(this.offsetWidth / 120) ]]]"
            view_layout:
              grid-column: 1/-2

          - type: "custom:button-card"
            template: live_tile_with_camera
            entity: camera.doorbell_high
            name: Front Door

          # driveway camera and presence
          - type: "custom:button-card"
            template:
              - live_tile_card
              - live_tile_with_long_state
              - live_tile_with_state_countdown
            entity: binary_sensor.driveway_motion
            name: Driveway
            variables:
              aspect_ratio: "[[[ return Math.round(this.offsetWidth / 120) ]]]"
            view_layout:
              grid-column: 1/-2

          - type: "custom:button-card"
            template: live_tile_with_camera
            entity: camera.driveway_medium
            name: Driveway

          # garage camera and presence
          - type: "custom:button-card"
            template:
              - live_tile_card
              - live_tile_with_long_state
              - live_tile_with_state_countdown
            entity: binary_sensor.garage_motion
            name: Garage
            variables:
              aspect_ratio: "[[[ return Math.round(this.offsetWidth / 120) ]]]"
            view_layout:
              grid-column: 1/-2

          - type: "custom:button-card"
            template: live_tile_with_camera
            entity: camera.garage_medium
            name: Garage

          # backyard camera and presence
          - type: "custom:button-card"
            template:
              - live_tile_card
              - live_tile_with_long_state
              - live_tile_with_state_countdown
            entity: binary_sensor.backyard_motion
            name: Backyard
            variables:
              aspect_ratio: "[[[ return Math.round(this.offsetWidth / 120) ]]]"
            view_layout:
              grid-column: 1/-2

          - type: "custom:button-card"
            template: live_tile_with_camera
            entity: camera.backyard_medium
            name: Backyard

          # - type: 'custom:swipe-card'
          #   parameters:
          #     direction: vertical
          #     autoHeight: true
          #     height: 112
          #     effect: cube
          #     cubeEffect:
          #       - slideShadows: false
          #     xautoplay:
          #       delay: 60000
          #   cards: !include secret/summary-cameras.yaml

      # [Column] Person tracker / Weather
      - type: "custom:layout-card"
        layout_type: "custom:grid-layout"
        layout:
          margin: 0
          padding: 0
          card_margin: 1px
        view_layout:
          grid-area: c2
          show:
            mediaquery: "(min-width: 1128.1px), (max-width: 800px)"
        cards:
          # Person tracker
          - type: "custom:layout-card"
            layout_type: "custom:grid-layout"
            layout:
              grid-template-columns: >-
                repeat(auto-fill, [col-start] minmax(128px, 1fr)
                [col-end])
              margin: 0
              card_margin: 1px
            cards: &summary-column-people-cards
              - type: "custom:button-card"
                template: header_card
                variables:
                  name: FAMILY
                  label: More
                  link: /ui-dashboard/1
                view_layout:
                  grid-column: 1/-1

              - type: "custom:button-card"
                template:
                  - large_tile_card
                  - live_tile_card
                  - live_tile_with_long_state
                entity: person.josh
                icon: mdi:cake-variant
                variables:
                  state: >-
                    [[[ return entity.state === 'not_home' ? 'Away' : entity.state ]]]
                name: >-
                  [[[ return `${states['sensor.anniversary_josh_s_birthday'].state} Days` ]]]
                state_display: "[[[ return variables.state ]]]"
                styles:
                  state:
                    - text-transform: capitalize
                  card:
                    - color: var(--primary-text)
                    - background-image: >
                        [[[ return "linear-gradient(to bottom, rgba(0,0,0,.45) 0%, rgba(0,0,0,0) 100%), url('" +
                        entity.attributes.entity_picture + "')" ]]]

              - type: "custom:button-card"
                template:
                  - large_tile_card
                  - live_tile_card
                  - live_tile_with_long_state
                entity: person.autum
                icon: mdi:cake-variant
                variables:
                  state: >-
                    [[[ return entity.state === 'not_home' ? 'Away' : entity.state ]]]
                name: >-
                  [[[ return `${states['sensor.anniversary_autum_s_birthday'].state} Days` ]]]
                state_display: "[[[ return variables.state ]]]"
                styles:
                  state:
                    - text-transform: capitalize
                  card:
                    - color: var(--primary-text)
                    - background-image: >
                        [[[ return "linear-gradient(to bottom, rgba(0,0,0,.45) 0%, rgba(0,0,0,0) 100%), url('" +
                        entity.attributes.entity_picture + "')" ]]]

          # [Column] Weather
          - type: "custom:layout-card"
            layout_type: "custom:grid-layout"
            layout: !include snippets/layout-live-tile.yaml
            cards: &summary-column-weather-cards
              - type: "custom:button-card"
                template: header_card
                variables:
                  name: WEATHER
                  label: More
                  link: /ui-dashboard/neighborhood
                view_layout:
                  grid-column: 1/-1

              - type: "custom:button-card"
                template: live_tile
                icon: |
                  [[[
                    var weatherIconDict = {
                      'partlycloudy': 'partly-cloudy',
                      'clear-night': 'night'
                    }
                    var weatherIcon = weatherIconDict[entity.state]
                    if (weatherIcon == null) {weatherIcon = entity.state}
                    return "mdi:weather-" + weatherIcon
                  ]]]
                name: |
                  [[[ 
                    var weatherNameDict = {
                      'partlycloudy': 'Partly Cloudy',
                      'clear-night': 'Clear Night'
                    }
                    var weatherName = weatherNameDict[entity.state]
                    if (weatherName == null) {weatherName = entity.state}
                    return weatherName
                  ]]]
                label: |
                  [[[
                    var tempForecast = entity.attributes.forecast.map((item) => { return item.temperature }).slice(0, 4)
                    if (states['sensor.valhalla_hourly_forecast_temperature_rising'] == 'Rising') {
                      return 'â ' + Math.max(...tempForecast) + 'Â°'                      
                    } else {
                      return 'â ' + Math.min(...tempForecast) + 'Â°'
                    }
                  ]]]
                state_display: >-
                  [[[ return Math.round(entity.attributes.temperature) + "Â°"
                  ]]]
                entity: weather.home
                styles:
                  name:
                    - width: 50%
                  grid:
                    - background: var(--ha-card-background)
                  card:
                    - background: |
                        [[[
                          var temp = parseFloat(entity.attributes.temperature)
                          if (temp >= 25) {
                            return "rgba(var(--rgb-primary-color)," + ((temp - 25) / 7) + ")"
                          }
                          if (temp <= 20) {
                            return "rgba(var(--rgb-primary-color)," + ((20 - temp) / 14) + ")"
                          }
                          return "transparent"
                        ]]]

              # precipitation
              - type: "custom:button-card"
                template: live_tile
                variables:
                  day: |
                    [[[
                      var hour = new Date
                      hour = parseInt( hour.getHours() )
                      if (hour < 4) { return 1 }
                      if (hour < 21) { return 0 } else { return 1 }
                    ]]]
                entity: weather.kjyo_daynight
                name: Precipitation
                state_display: '[[[ return entity.attributes.forecast[variables.day].precipitation_probability + "%" ]]]'
                icon: '[[[ return (entity.attributes.forecast[variables.day].precipitation_probability >= 33) ? "mdi:water" : "mdi:water-outline" ]]]'
                label: "[[[ return entity.attributes.forecast[variables.day].precipitation ]]]"
                show_units: false
                styles:
                  grid:
                    - background: '[[[ return "rgba(var(--rgb-primary-color)," + (parseInt(entity.attributes.forecast[variables.day].precipitation_probability)/100) + ")" ]]]'
                  card:
                    - background: var(--ha-card-background)

              # AQI
              - type: "custom:button-card"
                template: live_tile
                entity: sensor.waqi_nova_air_quality_index
                state_display: |
                  [[[ return Math.round(entity.state) ]]]
                variables:
                  level: |
                    [[[
                      if (entity.state > 300) {
                        return "Hazardous"
                      } else if (entity.state > 200) {
                        return "Very Unhealthy"
                      } else if (entity.state > 150) {
                        return "Unhealthy"
                      } else if (entity.state > 100) {
                        return "Unhealthy for Sensitive Groups"
                      } else if (entity.state > 50) {
                        return "Moderate"
                      } else {
                        return "Good"
                      }
                    ]]]
                name: AQI
                icon: mdi:molecule
                label: "[[[ return variables.level ]]]"
                show_units: false
                styles:
                  card:
                    - background: |
                        [[[
                          if (entity.state > 300) {
                            return "maroon"
                          } else if (entity.state > 200) {
                            return "purple"
                          } else if (entity.state > 150) {
                            return "rgba(var(--rgb-primary-color),1)"
                          } else if (entity.state > 100) {
                            return "rgba(var(--rgb-primary-color),.66)"
                          } else if (entity.state > 50) {
                            return "rgba(var(--rgb-primary-color),.33)"
                          } else {
                            return "var(--ha-card-background)"
                          }
                        ]]]
                view_layout:
                  show:
                    mediaquery: "(min-width: 1129px)"

              # Allergens
              - type: "custom:button-card"
                template:
                  - live_tile_card
                  - live_tile_with_long_state
                entity: sensor.tomorrow_io_home_tree_pollen_index
                variables:
                  label: |
                    [[[
                      return "Grass - " + states['sensor.tomorrow_io_home_grass_pollen_index'].state + "<br>Tree - " + states['sensor.tomorrow_io_home_tree_pollen_index'].state + "<br>Weed - " + states['sensor.tomorrow_io_home_weed_pollen_index'].state
                    ]]]
                  state: |
                    [[[
                      var sum = "Grass - " + states['sensor.tomorrow_io_home_grass_pollen_index'].state + "<br>Tree - " + states['sensor.tomorrow_io_home_tree_pollen_index'].state + "<br>Weed - " + states['sensor.tomorrow_io_home_weed_pollen_index'].state
                      if (sum.includes('very_high')) {return 'Very High' }
                      if (sum.includes('high')) {return 'High' }
                      if (sum.includes('medium')) {return 'Medium' }
                      if (sum.includes('very_low')) {return 'Very Low' }
                      if (sum.includes('low')) {return 'Low' }
                      return 'None'
                    ]]]
                name: Pollen
                state_display: "[[[ return variables.state ]]]"
                label: '[[[ return variables.label.replace("_", " ") ]]]'
                styles:
                  card:
                    - color: |
                        [[[
                          switch(variables.state) {
                            case 'None': return 'var(--disabled-text-color)'
                            case 'Very Low': return 'var(--primary-text-color)'
                            case 'Low': return 'var(--primary-text-color)'
                            default: return 'var(--text-accent-color)'
                          }
                        ]]]
                    - background: |
                        [[[
                          switch(variables.state) {
                            case 'Very High': return 'var(--accent-color)'
                            case 'High': return 'var(--primary-color)'
                            case 'Medium': return 'rgba(var(--rgb-primary-color), .75)'
                            case 'Low': return 'rgba(var(--rgb-primary-color), .5)'
                            case 'Very Low': 'rgba(var(--rgb-primary-color), .25)'
                            default: return 'var(--ha-card-background)'
                          }
                        ]]]
                  label:
                    - text-transform: capitalize

              - type: "custom:button-card"
                template: live_tile
                entity: sensor.waqi_nova_humidity
                name: Humidity
                icon: mdi:water-percent
                label: |
                  [[[
                    if (entity.state > 75) { return 'Average'; }
                    if (entity.state > 80) { return 'High'; }
                    if (entity.state > 85) { return 'Very High'; }

                    return 'Low';
                  ]]]
                styles:
                  card:
                    - color: |
                        [[[
                          if (entity.state == 0) { return 'var(--disabled-text-color)' }
                          if (entity.state > 70) {
                            return 'var(--text-accent-color)';
                          }
                          return 'var(--primary-text-color)';
                        ]]]
                    - background: |
                        [[[
                          if (entity.state == 0) { return 'var(--ha-card-background)' }
                          switch(entity.state) {
                            case (entity.state > 85): return 'var(--accent-color)'
                            case (entity.state > 80): return 'var(--primary-color)'
                            case (entity.state > 75): return 'rgba(var(--rgb-primary-color), .5)'
                            case (entity.state > 70): return 'rgba(var(--rgb-primary-color), .25)'
                            default: return 'var(--ha-card-background)'
                          }
                        ]]]

              # wind speed
              - type: "custom:button-card"
                template: live_tile_with_unit
                entity: weather.forecast_home_hourly
                name: "Wind"
                icon: "mdi:navigation"
                label: '[[[ return states["sensor.outdoor_wind_direction"].state ]]]'
                state_display: "[[[ return entity.attributes.wind_speed ]]]"
                custom_fields:
                  unit: "[[[ return entity.attributes.wind_speed_unit ]]]"
                styles:
                  grid:
                    - background: var(--ha-card-background)
                  card:
                    - background: |
                        [[[
                          var wind_speed_mph = parseFloat(entity.attributes.wind_speed) * 0.6213712
                          if (wind_speed_mph <= 30) { return "transparent" }
                          if (wind_speed_mph <= 54) {
                            return "rgba(var(--rgb-primary-color)," + (wind_speed_mph / 54) + ")"
                          } else {
                            return "var(--accent-color)"
                          }
                        ]]]
                  icon:
                    - transform: '[[[ return "rotate(" + parseFloat(states["weather.forecast_home_hourly"].attributes.wind_bearing) + "deg)" ]]]'

              # - type: "custom:auto-entities"
              #   filter:
              #     template: |
              #       {% for alert in range(0,states('sensor.nws_alert_rss_feed')|int) -%}
              #         {{
              #           { 'entity': 'sensor.nws_alert_rss_feed',
              #             'type': 'custom:button-card',
              #             'template': ['live_tile_card', 'live_tile_with_long_state', 'nws_alerts'],
              #             'variables': {
              #               'slide': alert
              #             },
              #           }
              #         }},
              #       {%- endfor %}
              #   show_empty: false
              #   card:
              #     type: "custom:swipe-card"
              #     parameters:
              #       direction: vertical
              #       autoHeight: true
              #       height: 112
              #       effect: cube
              #       autoplay:
              #         delay: 5000
              #       loop: true
              #       cubeEffect:
              #         - slideShadows: false
              #   card_param: cards
              #   view_layout:
              #     show:
              #       mediaquery: "(max-width: 1128px)"

              # - type: "custom:auto-entities"
              #   filter:
              #     template: |
              #       {% for alert in range(0,states('sensor.nws_alert_rss_feed')|int) -%}
              #         {{
              #           { 'entity': 'sensor.nws_alert_rss_feed',
              #             'type': 'custom:button-card',
              #             'template': ['live_tile_card', 'live_tile_with_long_state', 'nws_alerts'],
              #             'variables': {
              #               'slide': alert,
              #               'aspect_ratio': 2
              #             },
              #           }
              #         }},
              #       {%- endfor %}
              #   show_empty: false
              #   card:
              #     type: "custom:swipe-card"
              #     parameters:
              #       direction: vertical
              #       autoHeight: true
              #       height: 112
              #       effect: cube
              #       autoplay:
              #         delay: 5000
              #       loop: true
              #       cubeEffect:
              #         - slideShadows: false
              #   card_param: cards
              #   view_layout:
              #     grid-column: span 2
              #     show:
              #       mediaquery: "(min-width: 1128px)"

      # Begin Masonry Layout here
      - type: "custom:layout-card"
        layout_type: "custom:grid-layout"
        layout:
          grid-template-areas: '". mc ."'
          grid-template-columns: 0 auto 0
          margin: -1px
          mediaquery:
            "(max-width: 512px)":
              grid-template-columns: 16px auto 16px
        view_layout:
          grid-column: 1/-1
        cards:
          - type: "custom:layout-card"
            layout_type: "custom:horizontal-layout"
            layout:
              width: 256
              max_width: 512
              max_cols: 4
              card_margin: 0 16px
              margin: 0 -16px
            view_layout:
              grid-area: mc
            cards:
              # [Column] Doorbell voltage
              - type: "custom:layout-card"
                layout_type: "custom:grid-layout"
                layout:
                  margin: 0
                  card_margin: 1px
                view_layout:
                  grid-area: c1
                cards:
                  - type: "custom:layout-card"
                    layout_type: "custom:grid-layout"
                    layout:
                      grid-template-columns: >-
                        repeat(auto-fill, [col-start] minmax(128px, 1fr)
                        [col-end])
                      margin: 0
                      card_margin: 1px
                      padding: 0
                    cards:
                      - type: "custom:button-card"
                        template: header_card
                        variables:
                          name: ENERGY
                          label: More
                          link: /ui-dashboard/energy
                        view_layout:
                          grid-column: 1/-1

                      - type: "custom:decluttering-card"
                        template: mini_graph_tile
                        view_layout:
                          grid-column: span 2
                        variables:
                          - aspect_ratio: 2/1
                          - points_per_hour: 4
                          - entities:
                              - entity: sensor.doorbell_voltage
                          - title: Doorbell Voltage
                          - icon: "mdi:home-lightning-bolt"
                          - line_width: 2

              # [Column] Weather (Repeat)
              - type: "custom:layout-card"
                layout_type: "custom:grid-layout"
                layout:
                  grid-template-columns: >-
                    repeat(auto-fill, [col-start] minmax(128px, 1fr)
                    [col-end])
                  margin: 0
                  card_margin: 1px
                view_layout:
                  show:
                    mediaquery: "(min-width: 800.1px) and (max-width: 1128px)"
                cards: *summary-column-weather-cards

              # [Column] Dummy
              - type: "custom:layout-card"
                layout_type: "custom:grid-layout"
                layout:
                  grid-template-columns: >-
                    repeat(auto-fill, [col-start] minmax(128px, 1fr)
                    [col-end])
                  margin: 0
                  card_margin: 1px
                cards: []

              # [Column] Network
              - type: "custom:layout-card"
                layout_type: "custom:grid-layout"
                cards:
                  - type: "custom:button-card"
                    template: header_card
                    variables:
                      name: NETWORK
                      label: More
                      link: /ui-dashboard/1
                    view_layout:
                      grid-column: 1/-1

                  - type: "custom:decluttering-card"
                    template: mini_graph_tile
                    variables:
                      - entities:
                          - entity: sensor.pi_hole_ads_blocked_today
                      - title: Ads Blocked Today

                  - type: "custom:decluttering-card"
                    template: mini_graph_tile
                    variables:
                      - entities:
                          - entity: sensor.unifi_status_www_xput_down
                      - title: Download Speed

                  - type: "custom:decluttering-card"
                    template: mini_graph_tile
                    variables:
                      - entities:
                          - entity: sensor.unifi_status_www_xput_up
                      - title: Upload Speed

                layout:
                  grid-template-columns: >-
                    repeat(auto-fill, [col-start] minmax(128px, 1fr)
                    [col-end])
                  margin: 0
                  card_margin: 1px

              # [Column] Astrometrics
              - type: "custom:layout-card"
                layout_type: "custom:grid-layout"
                cards:
                  - type: "custom:button-card"
                    template: header_card
                    variables:
                      name: ASTROMETRICS
                      label: More
                      link: /ui-dashboard/astrometrics
                    view_layout:
                      grid-column: 1/-1

                  - type: "custom:mod-card"
                    card_mod:
                      style: "ha-card { margin: -1px !important; }"
                    card:
                      type: "custom:layout-card"
                      layout_type: "custom:grid-layout"
                      layout:
                        margin: 0
                      cards:
                        - type: "custom:button-card"
                          template: live_tile_card
                          entity: sun.sun
                          show_name: false
                          show_icon: false
                          color_type: icon
                          variables:
                            aspect_ratio: 3/1
                          state_display: |-
                            [[[
                              if (entity.attributes.elevation >= 0) {
                                var diff = -(new Date() - new Date(entity.attributes.next_setting)) / 1000 / 60 / 60
                                if (diff > 1.5) {
                                  return Math.round(diff) + "<span style='font-size: var(--h6-font-size); font-weight: 500; opacity: .5;'> HR</span>"
                                } else {
                                  return Math.round(diff * 60) + "<span style='font-size: var(--h6-font-size); font-weight: 500; opacity: .5;'> MIN</span>"
                                }
                              } else {
                                var diff = -(new Date() - new Date(entity.attributes.next_rising)) / 1000 / 60 / 60
                                if (diff > 1.5) {
                                  return Math.round(diff) + "<span style='font-size: var(--h6-font-size); font-weight: 500; opacity: .5;'> HR</span>"
                                } else {
                                  return Math.round(diff * 60) + "<span style='font-size: var(--h6-font-size); font-weight: 500; opacity: .5;'> MIN</span>"
                                }
                              }
                            ]]]

                        - type: "custom:sun-card"
                          style: >
                            ha-card { aspect-ratio: 3/1; margin-top: -4px; }

                            .sun-card {padding: 0 !important; }

                            .sun-card-header, .sun-card-footer {display: none
                            !important; }

                            .sun-card-body { padding-top: 0 !important;}

                        - type: "custom:button-card"
                          template: live_tile
                          entity: sun.sun
                          show_state: false
                          show_icon: false
                          variables:
                            aspect_ratio: 3/1
                          name: |-
                            [[[
                              if (entity.attributes.elevation >= 0) {
                                return "To Sunset"
                              } else {
                                return "To Sunrise"
                              }
                            ]]]
                          label: |-
                            [[[
                              if (entity.attributes.elevation >= 0) {
                                var time = new Date(entity.attributes.next_setting)
                                return time.toLocaleTimeString('en-US', { hour12: false, hour: '2-digit', minute: '2-digit' })
                              } else {
                                var time = new Date(entity.attributes.next_rising)
                                return time.toLocaleTimeString('en-US', { hour12: false, hour: '2-digit', minute: '2-digit' })
                              }
                            ]]]
                          styles:
                            card:
                              - margin-top: "-4px"

                  - type: "custom:button-card"
                    template: live_tile
                    entity: sensor.moon
                    name: '[[[ return entity.state.replace("_", " ") ]]]'
                    show_state: false

                    # - type: "custom:decluttering-card"
                    #   template: mini_graph_tile
                    #   variables:
                    #     - entities:
                    #         - entity: sensor.noaa_space_weather_solar_wind_speed
                    #     - title: Solar Wind Speed
                    #     - icon: mdi:weather-windy

                    # - type: "custom:button-card"
                    #   template: live_tile
                    #   entity: binary_sensor.iss
                    #   name: ISS
                    #   icon: mdi:space-station
                    #   show_state: false
                    #   # state_display: '[[[ return entity.attributes.number_of_people_in_space ]]]'
                    #   show_label: true
                    #   label: "[[[ return moment(entity.attributes.next_rise).fromNow() ]]]"
                    #   # custom_fields:
                    #   #  unit: People

                    # - type: map
                    #   entities:
                    #     - entity: binary_sensor.iss
                    #   default_zoom: 0.25
                    #   hours_to_show: 12
                    #   card_mod:
                    #     style:
                    #       .: |
                    #         ha-icon-button { display: none; }
                    #       ha-map$: |
                    #         .leaflet-control-container { display: none; }
                    #       ha-map$ha-entity-marker$: >
                    #         .marker { width: 8px !important; height: 8px !important; margin-top:
                    #         20px; margin-left: 20px; border: 0 !important; background-color: var(--primary-color) !important; color: transparent !important; }

                    # - type: "custom:swipe-card"
                    #   parameters:
                    #     direction: vertical
                    #     autoHeight: true
                    #     height: 112
                    #     effect: cube
                    #     autoplay:
                    #       delay: 15000
                    #     cubeEffect:
                    #       - slideShadows: false
                    #   cards:
                    #     - &summary-card-noaa-space-weather
                    #       type: "custom:button-card"
                    #       variables:
                    #         aspect_ratio: 2/1
                    #         slide: 0
                    #       template:
                    #         - live_tile_card
                    #         - live_tile_with_long_state
                    #       entity: sensor.noaa_space_weather_alert_1
                    #       name: '[[[ return entity.state + " &bull; " + entity.attributes.summary.split(": ")[0] + " &bull; " + moment(entity.attributes.date).fromNow() ]]]'
                    #       state_display: '[[[ return entity.attributes.summary.split(": ")[1] ]]]'
                    #       label: "[[[ return entity.attributes.potential_impacts ]]]"
                    #       color: var(--ha-card-background)
                    #       icon: mdi:alert-octagram
                    #       styles:
                    #         card:
                    #           - color: var(--primary-text)
                    #           - background-image: |
                    #               [[[
                    #                 var diff = (new Date() - new Date(entity.attributes.date)) / 1000
                    #                 var opacity = 1 - (diff / 86400)
                    #                 if (diff > 86400) { return '' }
                    #                 return 'linear-gradient( to top, rgba(var(--rgb-primary-color),' + opacity + ') 0%, rgba(var(--rgb-primary-color),' + opacity + ') 100%)'
                    #               ]]]

                    #     - <<: *summary-card-noaa-space-weather
                    #       entity: sensor.noaa_space_weather_alert_2
                    #       variables:
                    #         aspect_ratio: 2/1

                    #     - <<: *summary-card-noaa-space-weather
                    #       entity: sensor.noaa_space_weather_alert_3
                    #       variables:
                    #         aspect_ratio: 2/1

                    #     - <<: *summary-card-noaa-space-weather
                    #       entity: sensor.noaa_space_weather_alert_4
                    #       variables:
                    #         aspect_ratio: 2/1

                    #     - <<: *summary-card-noaa-space-weather
                    #       entity: sensor.noaa_space_weather_alert_5
                    #       variables:
                    #         aspect_ratio: 2/1

                    # view_layout:
                    #   grid-column: span 2

                layout:
                  grid-template-columns: "repeat(auto-fill, [col-start] minmax(128px, 1fr) [col-end])"
                  margin: 0

# [Pop Up Cards]
popup_cards:
  sensor.octoprint_current_state:
    title: Genesis
    card: !include machines/genesis-cards.yaml
    style:
      .: |
        :host .content { width: 75vw; height: 75vh; }
        @media (max-width: 1100px) { :host .content { width: 100vw; height: 100vh; } }

  media_player.terpsichora:
    title: Terpsichora
    card: !include machines/terpsichora-cards.yaml
    style:
      .: |
        :host .content { width: 75vw; height: 75vh; }
        @media (max-width: 1100px) { :host .content { width: 100vw; height: 100vh; } }

  sensor.unison_processor_use:
    title: Unison
    card: !include machines/unison-cards.yaml
    style:
      .: |
        :host .content { width: 75vw; height: 75vh; }
        @media (max-width: 1100px) { :host .content { width: 100vw; height: 100vh; } }

  sensor.nws_alert_rss_feed:
    title: NWS Alerts
    card: !include cards/nws-alerts.yaml
    style:
      .: |
        :host .content { width: 75vw; }
        @media (max-width: 1100px) { :host .content { width: 100vw; } }
